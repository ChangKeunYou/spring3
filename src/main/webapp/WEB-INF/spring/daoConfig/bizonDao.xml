<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/jdbc  
						http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/util
       					http://www.springframework.org/schema/util/spring-util-3.2.xsd">	
	
	<!-- Local DB -->					
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true" />
		<property name="jndiName" value="jdbc/Neomodule" />
	</bean>
		
	
	<!-- 외부디비 -->
	<bean id="dataSourceForMtgi" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true" />
		<property name="jndiName" value="jdbc/IMDB" />
	</bean>
	
	
	<bean id="logDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	  <constructor-arg ref="dataSource" />
	  <property name="logFormatter">
	   <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	    <property name="loggingType" value="MULTI_LINE" />
	    <property name="sqlPrefix" value="SQL=>" /> 
	   </bean>
	  </property>
	 </bean>
	
	
	<bean id="logDataSourceForMtgi" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
	  <constructor-arg ref="dataSourceForMtgi" />
	  <property name="logFormatter">
	   <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	    <property name="loggingType" value="MULTI_LINE" />
	    <property name="sqlPrefix" value="SQL=>" /> 
	   </bean>
	  </property>
	 </bean>
	
	
	<!-- 트랜잭션 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDataSource" />
	</bean>
	
	<!-- SMTP 메일발송 DB -->
	<bean id="transactionManagerForMtgi" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="logDataSourceForMtgi" />
	</bean>
	
	
	<!-- 밴더설정 -->
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
        <property name="properties">  
        	<props>  
               	<prop key="SQL Server">sqlserver</prop>  
            	<prop key="DB2">db2</prop>
            	<prop key="Derby">derby</prop> 
               	<prop key="Oracle">oracle</prop>  
                <prop key="MySQL">mysql</prop>  
           	</props>  
        </property>  
   	</bean>
	
	
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">  
        <property name="properties" ref="vendorProperties"/>  
    </bean>  	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="logDataSource" />
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <property name="configLocation" value="/WEB-INF/classes/mappers/bizon-mybatis-config.xml" />
        <!--  
        <property name="typeAliasesPackage" value="com.bizon.front.dto.manage,com.bizon.front.vo.manage,com.bizon.front.dto.mail,com.bizon.front.vo.mail,com.bizon.front.dto.common,com.bizon.front.dto.customer"/>
         -->
         <property name="typeAliasesPackage" value="com.bizon.front.vo , com.bizon.front.dto"/>
	</bean>
	
	
	<bean id="sqlSessionFactoryForMtgi" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="logDataSourceForMtgi" />
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <property name="configLocation" value="/WEB-INF/classes/mappers/mtgi-mybatis-config.xml" />
        <!--  
        <property name="typeAliasesPackage" value="com.bizon.front.dto.manage,com.bizon.front.vo.manage,com.bizon.front.dto.mail,com.bizon.front.vo.mail,com.bizon.front.dto.common,com.bizon.front.dto.customer"/>
         -->
         <property name="typeAliasesPackage" value="com.bizon.front.vo , com.bizon.front.dto"/>
	</bean>	
	
	<!-- 인터페이스르 나눠서 구분하여 스캐닝...spring-mybatis1.2.0 버전부터 바꼇다-_- 멀티로 안됨.. -->
	
	<!-- bizon mapper -->
    <bean id="mybatisScannerForBizon" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.bizon.front.dao.mapper_bizon.*" />
       <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

	<!-- 그외 매퍼 -->
	<bean id="mybatisScannerForMtgi" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.bizon.front.dao.mapper_mtgi.*" />
       <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryForMtgi" />
    </bean>
	
	
    <bean id="daoComExec" class="com.bizon.front.dao.com.DaoComExec">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
    </bean> 
	
	
    <bean id="daoComExecForMtgi" class="com.bizon.front.dao.com.DaoComExec">
        <property name="sqlSessionFactory" ref="sqlSessionFactoryForMtgi" /> 
    </bean> 
    
    
    	<!-- controller 함수단위로 transaction 처리 적용 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>
	
 
	<tx:advice id="txAdvice_mtgi" transaction-manager="transactionManagerForMtgi">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>

	
	<aop:config>
		<aop:advisor pointcut="execution(public * com.bizon.front.controller.*.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(public * com.bizon.front.controller.*.*.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(public * www.web.projects.*.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(public * www.web.projects.*.*.*(..))" advice-ref="txAdvice"/>
		
		<aop:advisor pointcut="execution(public * com.bizon.front.controller.*.*(..))" advice-ref="txAdvice_mtgi"/>
		<aop:advisor pointcut="execution(public * com.bizon.front.controller.*.*.*(..))" advice-ref="txAdvice_mtgi"/>
		<aop:advisor pointcut="execution(public * www.web.projects.*.*(..))" advice-ref="txAdvice_mtgi"/>
		<aop:advisor pointcut="execution(public * www.web.projects.*.*.*(..))" advice-ref="txAdvice_mtgi"/>
	</aop:config>	
    
    
    <!--  
 
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    
        <property name="basePackage" value="com.bizon.front.dao.manage,com.bizon.front.dao.cea,com.bizon.front.dao.mbr,com.bizon.front.dao.mail,com.bizon.front.dao.common,com.bizon.front.dao.cst,com.bizon.front.dao.idx" />
    
       <property name="basePackage" value="com.bizon.front.dao.*" />
    </bean>
    
    -->
    
    <!--  
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">

       <property name="basePackage" value="com.bizon.front.dao.*" />
    </bean>
    -->
	
						
</beans>						